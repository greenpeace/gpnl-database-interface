<?php
/**
 * PeriodiekSchenkenRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  P4NL_DATABASE_INTERFACE
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * GPN.RegistrerenApi
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.10
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace P4NL_DATABASE_INTERFACE\Model;

use \ArrayAccess;
use \P4NL_DATABASE_INTERFACE\ObjectSerializer;

/**
 * PeriodiekSchenkenRequest Class Doc Comment
 *
 * @category Class
 * @package  P4NL_DATABASE_INTERFACE
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PeriodiekSchenkenRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PeriodiekSchenkenRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'marketingcode' => 'string',
        'screen_id' => 'int',
        'bedrag' => 'double',
        'jaar' => 'int',
        'geslacht' => 'string',
        'initialen' => 'string',
        'voornamen' => 'string',
        'tussenvoegsel' => 'string',
        'achternaam' => 'string',
        'geboortedatum' => '\DateTime',
        'geboorteplaats' => 'string',
        'burgelijkestaat' => 'string',
        'postcode' => 'string',
        'huisnummer' => 'string',
        'huisnummertoevoeging' => 'string',
        'straat' => 'string',
        'woonplaats' => 'string',
        'telefoonnummer' => 'string',
        'email' => 'string',
        'rekeningnummer' => 'string',
        'betalingstermijn' => 'string',
        'landcode' => 'string',
        'voornamen_partner' => 'string',
        'achternaam_partner' => 'string',
        'geboortedatum_partner' => '\DateTime',
        'geboorteplaats_partner' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'marketingcode' => null,
        'screen_id' => 'int32',
        'bedrag' => 'double',
        'jaar' => 'int32',
        'geslacht' => null,
        'initialen' => null,
        'voornamen' => null,
        'tussenvoegsel' => null,
        'achternaam' => null,
        'geboortedatum' => 'date-time',
        'geboorteplaats' => null,
        'burgelijkestaat' => null,
        'postcode' => null,
        'huisnummer' => null,
        'huisnummertoevoeging' => null,
        'straat' => null,
        'woonplaats' => null,
        'telefoonnummer' => null,
        'email' => null,
        'rekeningnummer' => null,
        'betalingstermijn' => null,
        'landcode' => null,
        'voornamen_partner' => null,
        'achternaam_partner' => null,
        'geboortedatum_partner' => 'date-time',
        'geboorteplaats_partner' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'marketingcode' => 'marketingcode',
        'screen_id' => 'screenId',
        'bedrag' => 'bedrag',
        'jaar' => 'jaar',
        'geslacht' => 'geslacht',
        'initialen' => 'initialen',
        'voornamen' => 'voornamen',
        'tussenvoegsel' => 'tussenvoegsel',
        'achternaam' => 'achternaam',
        'geboortedatum' => 'geboortedatum',
        'geboorteplaats' => 'geboorteplaats',
        'burgelijkestaat' => 'burgelijkestaat',
        'postcode' => 'postcode',
        'huisnummer' => 'huisnummer',
        'huisnummertoevoeging' => 'huisnummertoevoeging',
        'straat' => 'straat',
        'woonplaats' => 'woonplaats',
        'telefoonnummer' => 'telefoonnummer',
        'email' => 'email',
        'rekeningnummer' => 'rekeningnummer',
        'betalingstermijn' => 'betalingstermijn',
        'landcode' => 'landcode',
        'voornamen_partner' => 'voornamenPartner',
        'achternaam_partner' => 'achternaamPartner',
        'geboortedatum_partner' => 'geboortedatumPartner',
        'geboorteplaats_partner' => 'geboorteplaatsPartner'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'marketingcode' => 'setMarketingcode',
        'screen_id' => 'setScreenId',
        'bedrag' => 'setBedrag',
        'jaar' => 'setJaar',
        'geslacht' => 'setGeslacht',
        'initialen' => 'setInitialen',
        'voornamen' => 'setVoornamen',
        'tussenvoegsel' => 'setTussenvoegsel',
        'achternaam' => 'setAchternaam',
        'geboortedatum' => 'setGeboortedatum',
        'geboorteplaats' => 'setGeboorteplaats',
        'burgelijkestaat' => 'setBurgelijkestaat',
        'postcode' => 'setPostcode',
        'huisnummer' => 'setHuisnummer',
        'huisnummertoevoeging' => 'setHuisnummertoevoeging',
        'straat' => 'setStraat',
        'woonplaats' => 'setWoonplaats',
        'telefoonnummer' => 'setTelefoonnummer',
        'email' => 'setEmail',
        'rekeningnummer' => 'setRekeningnummer',
        'betalingstermijn' => 'setBetalingstermijn',
        'landcode' => 'setLandcode',
        'voornamen_partner' => 'setVoornamenPartner',
        'achternaam_partner' => 'setAchternaamPartner',
        'geboortedatum_partner' => 'setGeboortedatumPartner',
        'geboorteplaats_partner' => 'setGeboorteplaatsPartner'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'marketingcode' => 'getMarketingcode',
        'screen_id' => 'getScreenId',
        'bedrag' => 'getBedrag',
        'jaar' => 'getJaar',
        'geslacht' => 'getGeslacht',
        'initialen' => 'getInitialen',
        'voornamen' => 'getVoornamen',
        'tussenvoegsel' => 'getTussenvoegsel',
        'achternaam' => 'getAchternaam',
        'geboortedatum' => 'getGeboortedatum',
        'geboorteplaats' => 'getGeboorteplaats',
        'burgelijkestaat' => 'getBurgelijkestaat',
        'postcode' => 'getPostcode',
        'huisnummer' => 'getHuisnummer',
        'huisnummertoevoeging' => 'getHuisnummertoevoeging',
        'straat' => 'getStraat',
        'woonplaats' => 'getWoonplaats',
        'telefoonnummer' => 'getTelefoonnummer',
        'email' => 'getEmail',
        'rekeningnummer' => 'getRekeningnummer',
        'betalingstermijn' => 'getBetalingstermijn',
        'landcode' => 'getLandcode',
        'voornamen_partner' => 'getVoornamenPartner',
        'achternaam_partner' => 'getAchternaamPartner',
        'geboortedatum_partner' => 'getGeboortedatumPartner',
        'geboorteplaats_partner' => 'getGeboorteplaatsPartner'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['marketingcode'] = isset($data['marketingcode']) ? $data['marketingcode'] : null;
        $this->container['screen_id'] = isset($data['screen_id']) ? $data['screen_id'] : null;
        $this->container['bedrag'] = isset($data['bedrag']) ? $data['bedrag'] : null;
        $this->container['jaar'] = isset($data['jaar']) ? $data['jaar'] : null;
        $this->container['geslacht'] = isset($data['geslacht']) ? $data['geslacht'] : null;
        $this->container['initialen'] = isset($data['initialen']) ? $data['initialen'] : null;
        $this->container['voornamen'] = isset($data['voornamen']) ? $data['voornamen'] : null;
        $this->container['tussenvoegsel'] = isset($data['tussenvoegsel']) ? $data['tussenvoegsel'] : null;
        $this->container['achternaam'] = isset($data['achternaam']) ? $data['achternaam'] : null;
        $this->container['geboortedatum'] = isset($data['geboortedatum']) ? $data['geboortedatum'] : null;
        $this->container['geboorteplaats'] = isset($data['geboorteplaats']) ? $data['geboorteplaats'] : null;
        $this->container['burgelijkestaat'] = isset($data['burgelijkestaat']) ? $data['burgelijkestaat'] : null;
        $this->container['postcode'] = isset($data['postcode']) ? $data['postcode'] : null;
        $this->container['huisnummer'] = isset($data['huisnummer']) ? $data['huisnummer'] : null;
        $this->container['huisnummertoevoeging'] = isset($data['huisnummertoevoeging']) ? $data['huisnummertoevoeging'] : null;
        $this->container['straat'] = isset($data['straat']) ? $data['straat'] : null;
        $this->container['woonplaats'] = isset($data['woonplaats']) ? $data['woonplaats'] : null;
        $this->container['telefoonnummer'] = isset($data['telefoonnummer']) ? $data['telefoonnummer'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['rekeningnummer'] = isset($data['rekeningnummer']) ? $data['rekeningnummer'] : null;
        $this->container['betalingstermijn'] = isset($data['betalingstermijn']) ? $data['betalingstermijn'] : null;
        $this->container['landcode'] = isset($data['landcode']) ? $data['landcode'] : null;
        $this->container['voornamen_partner'] = isset($data['voornamen_partner']) ? $data['voornamen_partner'] : null;
        $this->container['achternaam_partner'] = isset($data['achternaam_partner']) ? $data['achternaam_partner'] : null;
        $this->container['geboortedatum_partner'] = isset($data['geboortedatum_partner']) ? $data['geboortedatum_partner'] : null;
        $this->container['geboorteplaats_partner'] = isset($data['geboorteplaats_partner']) ? $data['geboorteplaats_partner'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['marketingcode'] === null) {
            $invalidProperties[] = "'marketingcode' can't be null";
        }
        if ($this->container['screen_id'] === null) {
            $invalidProperties[] = "'screen_id' can't be null";
        }
        if (!is_null($this->container['bedrag']) && ($this->container['bedrag'] > 2147483647)) {
            $invalidProperties[] = "invalid value for 'bedrag', must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['bedrag']) && ($this->container['bedrag'] < 50)) {
            $invalidProperties[] = "invalid value for 'bedrag', must be bigger than or equal to 50.";
        }

        if ($this->container['initialen'] === null) {
            $invalidProperties[] = "'initialen' can't be null";
        }
        if ($this->container['voornamen'] === null) {
            $invalidProperties[] = "'voornamen' can't be null";
        }
        if ($this->container['achternaam'] === null) {
            $invalidProperties[] = "'achternaam' can't be null";
        }
        if ($this->container['geboortedatum'] === null) {
            $invalidProperties[] = "'geboortedatum' can't be null";
        }
        if ($this->container['geboorteplaats'] === null) {
            $invalidProperties[] = "'geboorteplaats' can't be null";
        }
        if ($this->container['huisnummer'] === null) {
            $invalidProperties[] = "'huisnummer' can't be null";
        }
        if ($this->container['telefoonnummer'] === null) {
            $invalidProperties[] = "'telefoonnummer' can't be null";
        }
        if ($this->container['email'] === null) {
            $invalidProperties[] = "'email' can't be null";
        }
        if ($this->container['landcode'] === null) {
            $invalidProperties[] = "'landcode' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets marketingcode
     *
     * @return string
     */
    public function getMarketingcode()
    {
        return $this->container['marketingcode'];
    }

    /**
     * Sets marketingcode
     *
     * @param string $marketingcode marketingcode
     *
     * @return $this
     */
    public function setMarketingcode($marketingcode)
    {
        $this->container['marketingcode'] = $marketingcode;

        return $this;
    }

    /**
     * Gets screen_id
     *
     * @return int
     */
    public function getScreenId()
    {
        return $this->container['screen_id'];
    }

    /**
     * Sets screen_id
     *
     * @param int $screen_id screen_id
     *
     * @return $this
     */
    public function setScreenId($screen_id)
    {
        $this->container['screen_id'] = $screen_id;

        return $this;
    }

    /**
     * Gets bedrag
     *
     * @return double
     */
    public function getBedrag()
    {
        return $this->container['bedrag'];
    }

    /**
     * Sets bedrag
     *
     * @param double $bedrag bedrag
     *
     * @return $this
     */
    public function setBedrag($bedrag)
    {

        if (!is_null($bedrag) && ($bedrag > 2147483647)) {
            throw new \InvalidArgumentException('invalid value for $bedrag when calling PeriodiekSchenkenRequest., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($bedrag) && ($bedrag < 50)) {
            throw new \InvalidArgumentException('invalid value for $bedrag when calling PeriodiekSchenkenRequest., must be bigger than or equal to 50.');
        }

        $this->container['bedrag'] = $bedrag;

        return $this;
    }

    /**
     * Gets jaar
     *
     * @return int
     */
    public function getJaar()
    {
        return $this->container['jaar'];
    }

    /**
     * Sets jaar
     *
     * @param int $jaar jaar
     *
     * @return $this
     */
    public function setJaar($jaar)
    {
        $this->container['jaar'] = $jaar;

        return $this;
    }

    /**
     * Gets geslacht
     *
     * @return string
     */
    public function getGeslacht()
    {
        return $this->container['geslacht'];
    }

    /**
     * Sets geslacht
     *
     * @param string $geslacht geslacht
     *
     * @return $this
     */
    public function setGeslacht($geslacht)
    {
        $this->container['geslacht'] = $geslacht;

        return $this;
    }

    /**
     * Gets initialen
     *
     * @return string
     */
    public function getInitialen()
    {
        return $this->container['initialen'];
    }

    /**
     * Sets initialen
     *
     * @param string $initialen initialen
     *
     * @return $this
     */
    public function setInitialen($initialen)
    {
        $this->container['initialen'] = $initialen;

        return $this;
    }

    /**
     * Gets voornamen
     *
     * @return string
     */
    public function getVoornamen()
    {
        return $this->container['voornamen'];
    }

    /**
     * Sets voornamen
     *
     * @param string $voornamen voornamen
     *
     * @return $this
     */
    public function setVoornamen($voornamen)
    {
        $this->container['voornamen'] = $voornamen;

        return $this;
    }

    /**
     * Gets tussenvoegsel
     *
     * @return string
     */
    public function getTussenvoegsel()
    {
        return $this->container['tussenvoegsel'];
    }

    /**
     * Sets tussenvoegsel
     *
     * @param string $tussenvoegsel tussenvoegsel
     *
     * @return $this
     */
    public function setTussenvoegsel($tussenvoegsel)
    {
        $this->container['tussenvoegsel'] = $tussenvoegsel;

        return $this;
    }

    /**
     * Gets achternaam
     *
     * @return string
     */
    public function getAchternaam()
    {
        return $this->container['achternaam'];
    }

    /**
     * Sets achternaam
     *
     * @param string $achternaam achternaam
     *
     * @return $this
     */
    public function setAchternaam($achternaam)
    {
        $this->container['achternaam'] = $achternaam;

        return $this;
    }

    /**
     * Gets geboortedatum
     *
     * @return \DateTime
     */
    public function getGeboortedatum()
    {
        return $this->container['geboortedatum'];
    }

    /**
     * Sets geboortedatum
     *
     * @param \DateTime $geboortedatum geboortedatum
     *
     * @return $this
     */
    public function setGeboortedatum($geboortedatum)
    {
        $this->container['geboortedatum'] = $geboortedatum;

        return $this;
    }

    /**
     * Gets geboorteplaats
     *
     * @return string
     */
    public function getGeboorteplaats()
    {
        return $this->container['geboorteplaats'];
    }

    /**
     * Sets geboorteplaats
     *
     * @param string $geboorteplaats geboorteplaats
     *
     * @return $this
     */
    public function setGeboorteplaats($geboorteplaats)
    {
        $this->container['geboorteplaats'] = $geboorteplaats;

        return $this;
    }

    /**
     * Gets burgelijkestaat
     *
     * @return string
     */
    public function getBurgelijkestaat()
    {
        return $this->container['burgelijkestaat'];
    }

    /**
     * Sets burgelijkestaat
     *
     * @param string $burgelijkestaat burgelijkestaat
     *
     * @return $this
     */
    public function setBurgelijkestaat($burgelijkestaat)
    {
        $this->container['burgelijkestaat'] = $burgelijkestaat;

        return $this;
    }

    /**
     * Gets postcode
     *
     * @return string
     */
    public function getPostcode()
    {
        return $this->container['postcode'];
    }

    /**
     * Sets postcode
     *
     * @param string $postcode postcode
     *
     * @return $this
     */
    public function setPostcode($postcode)
    {
        $this->container['postcode'] = $postcode;

        return $this;
    }

    /**
     * Gets huisnummer
     *
     * @return string
     */
    public function getHuisnummer()
    {
        return $this->container['huisnummer'];
    }

    /**
     * Sets huisnummer
     *
     * @param string $huisnummer huisnummer
     *
     * @return $this
     */
    public function setHuisnummer($huisnummer)
    {
        $this->container['huisnummer'] = $huisnummer;

        return $this;
    }

    /**
     * Gets huisnummertoevoeging
     *
     * @return string
     */
    public function getHuisnummertoevoeging()
    {
        return $this->container['huisnummertoevoeging'];
    }

    /**
     * Sets huisnummertoevoeging
     *
     * @param string $huisnummertoevoeging huisnummertoevoeging
     *
     * @return $this
     */
    public function setHuisnummertoevoeging($huisnummertoevoeging)
    {
        $this->container['huisnummertoevoeging'] = $huisnummertoevoeging;

        return $this;
    }

    /**
     * Gets straat
     *
     * @return string
     */
    public function getStraat()
    {
        return $this->container['straat'];
    }

    /**
     * Sets straat
     *
     * @param string $straat straat
     *
     * @return $this
     */
    public function setStraat($straat)
    {
        $this->container['straat'] = $straat;

        return $this;
    }

    /**
     * Gets woonplaats
     *
     * @return string
     */
    public function getWoonplaats()
    {
        return $this->container['woonplaats'];
    }

    /**
     * Sets woonplaats
     *
     * @param string $woonplaats woonplaats
     *
     * @return $this
     */
    public function setWoonplaats($woonplaats)
    {
        $this->container['woonplaats'] = $woonplaats;

        return $this;
    }

    /**
     * Gets telefoonnummer
     *
     * @return string
     */
    public function getTelefoonnummer()
    {
        return $this->container['telefoonnummer'];
    }

    /**
     * Sets telefoonnummer
     *
     * @param string $telefoonnummer telefoonnummer
     *
     * @return $this
     */
    public function setTelefoonnummer($telefoonnummer)
    {
        $this->container['telefoonnummer'] = $telefoonnummer;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets rekeningnummer
     *
     * @return string
     */
    public function getRekeningnummer()
    {
        return $this->container['rekeningnummer'];
    }

    /**
     * Sets rekeningnummer
     *
     * @param string $rekeningnummer rekeningnummer
     *
     * @return $this
     */
    public function setRekeningnummer($rekeningnummer)
    {
        $this->container['rekeningnummer'] = $rekeningnummer;

        return $this;
    }

    /**
     * Gets betalingstermijn
     *
     * @return string
     */
    public function getBetalingstermijn()
    {
        return $this->container['betalingstermijn'];
    }

    /**
     * Sets betalingstermijn
     *
     * @param string $betalingstermijn betalingstermijn
     *
     * @return $this
     */
    public function setBetalingstermijn($betalingstermijn)
    {
        $this->container['betalingstermijn'] = $betalingstermijn;

        return $this;
    }

    /**
     * Gets landcode
     *
     * @return string
     */
    public function getLandcode()
    {
        return $this->container['landcode'];
    }

    /**
     * Sets landcode
     *
     * @param string $landcode landcode
     *
     * @return $this
     */
    public function setLandcode($landcode)
    {
        $this->container['landcode'] = $landcode;

        return $this;
    }

    /**
     * Gets voornamen_partner
     *
     * @return string
     */
    public function getVoornamenPartner()
    {
        return $this->container['voornamen_partner'];
    }

    /**
     * Sets voornamen_partner
     *
     * @param string $voornamen_partner voornamen_partner
     *
     * @return $this
     */
    public function setVoornamenPartner($voornamen_partner)
    {
        $this->container['voornamen_partner'] = $voornamen_partner;

        return $this;
    }

    /**
     * Gets achternaam_partner
     *
     * @return string
     */
    public function getAchternaamPartner()
    {
        return $this->container['achternaam_partner'];
    }

    /**
     * Sets achternaam_partner
     *
     * @param string $achternaam_partner achternaam_partner
     *
     * @return $this
     */
    public function setAchternaamPartner($achternaam_partner)
    {
        $this->container['achternaam_partner'] = $achternaam_partner;

        return $this;
    }

    /**
     * Gets geboortedatum_partner
     *
     * @return \DateTime
     */
    public function getGeboortedatumPartner()
    {
        return $this->container['geboortedatum_partner'];
    }

    /**
     * Sets geboortedatum_partner
     *
     * @param \DateTime $geboortedatum_partner geboortedatum_partner
     *
     * @return $this
     */
    public function setGeboortedatumPartner($geboortedatum_partner)
    {
        $this->container['geboortedatum_partner'] = $geboortedatum_partner;

        return $this;
    }

    /**
     * Gets geboorteplaats_partner
     *
     * @return string
     */
    public function getGeboorteplaatsPartner()
    {
        return $this->container['geboorteplaats_partner'];
    }

    /**
     * Sets geboorteplaats_partner
     *
     * @param string $geboorteplaats_partner geboorteplaats_partner
     *
     * @return $this
     */
    public function setGeboorteplaatsPartner($geboorteplaats_partner)
    {
        $this->container['geboorteplaats_partner'] = $geboorteplaats_partner;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


